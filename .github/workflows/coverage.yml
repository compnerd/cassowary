name: coverage

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  coverage:
    runs-on: windows-latest

    strategy:
      matrix:
        include:
          - branch: development
            tag: DEVELOPMENT-SNAPSHOT-2021-05-25-a

    steps:
      - name: Install Swift ${{ matrix.tag }}
        run: |
          function Update-EnvironmentVariables {
            foreach ($level in "Machine", "User") {
              [Environment]::GetEnvironmentVariables($level).GetEnumerator() | % {
                # For Path variables, append the new values, if they're not already in there
                if ($_.Name -Match 'Path$') {
                  $_.Value = ($((Get-Content "Env:$($_.Name)") + ";$($_.Value)") -Split ';' | Select -Unique) -Join ';'
                }
                $_
              } | Set-Content -Path { "Env:$($_.Name)" }
            }
          }
          Install-Binary -Url "https://swift.org/builds/${{ matrix.branch }}/windows10/swift-${{ matrix.tag }}/swift-${{ matrix.tag }}-windows10.exe" -Name "installer.exe" -ArgumentList ("-q")
          Update-EnvironmentVariables
          # Reset Path and environment
          echo "$env:Path" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8
          Get-ChildItem Env: | % { echo "$($_.Name)=$($_.Value)" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append }

      - uses: actions/checkout@v2
      - name: Build
        run: swift build
      - name: Test
        run: swift test --enable-code-coverage

      - name: Process Coverage
        run: |
          llvm-cov export -format lcov -ignore-filename-regex ".build|Tests" -instr-profile .build\x86_64-unknown-windows-msvc\debug\codecov\default.profdata .build\x86_64-unknown-windows-msvc\debug\CassowaryPackageTests.xctest > coverage.lcov

      - uses: codecov/codecov-action@v1.5.0
        with:
          files: coverage.lcov
